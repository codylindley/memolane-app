m.utilities={breakURLCache:function(b){return b+"?breakCache="+(new Date).getTime()},browser:{init:function(){this.browser=this.searchString(this.dataBrowser)||$.i18n.t("An unknown browser","this message informs the user that we weren't able to identify the browser they're using");this.version=this.searchVersion(navigator.userAgent)||this.searchVersion(navigator.appVersion)||$.i18n.t("an unknown version","this message informs the user that we weren't able to identify the version of the browser they're using");
this.OS=this.searchString(this.dataOS)||$.i18n.t("an unknown OS","this message informs the user that we weren't able to identify the operating system they're using")},searchString:function(b){for(var a=0;a<b.length;a++){var c=b[a].string,e=b[a].prop;this.versionSearchString=b[a].versionSearch||b[a].identity;if(c){if(c.indexOf(b[a].subString)!=-1)return b[a].identity}else if(e)return b[a].identity}},searchVersion:function(b){var a=b.indexOf(this.versionSearchString);return a==-1?void 0:parseFloat(b.substring(a+
this.versionSearchString.length+1))},dataBrowser:[{string:navigator.userAgent,subString:"Chrome",identity:"Chrome"},{string:navigator.userAgent,subString:"OmniWeb",versionSearch:"OmniWeb/",identity:"OmniWeb"},{string:navigator.vendor,subString:"Apple",identity:"Safari",versionSearch:"Version"},{prop:window.opera,identity:"Opera"},{string:navigator.vendor,subString:"iCab",identity:"iCab"},{string:navigator.vendor,subString:"KDE",identity:"Konqueror"},{string:navigator.userAgent,subString:"Firefox",
identity:"Firefox"},{string:navigator.vendor,subString:"Camino",identity:"Camino"},{string:navigator.userAgent,subString:"Netscape",identity:"Netscape"},{string:navigator.userAgent,subString:"MSIE",identity:"Explorer",versionSearch:"MSIE"},{string:navigator.userAgent,subString:"Gecko",identity:"Mozilla",versionSearch:"rv"},{string:navigator.userAgent,subString:"Mozilla",identity:"Netscape",versionSearch:"Mozilla"}],dataOS:[{string:navigator.platform,subString:"Win",identity:"Windows"},{string:navigator.platform,
subString:"Mac",identity:"Mac"},{string:navigator.userAgent,subString:"iPhone",identity:"iPhone/iPod"},{string:navigator.platform,subString:"Linux",identity:"Linux"}]},capitalizeString:function(b){return b.charAt(0).toUpperCase()+b.slice(1)},wait:function(b){return $.Deferred(function(a){setTimeout(a.resolve,b)})},dateFormatRelative:function(b){var b=new Date(b*1E3),a=new Date,c="",c=(a.getTime()-b.getTime())/6E4,e=a.getHours()*60+a.getMinutes();return c=b.getYear()<a.getYear()?this.dateFormat(b,
"mmm d, yyyy",false):c-e>1440?this.dateFormat(b,"mmm d",false):c-e>0?$.i18n.t("yesterday"):Math.floor(c)<=0?$.i18n.t("seconds ago","indicating that something happened within the last 60 seconds"):c<60?$.i18n.t("%s min ago","number of minutes since something",[Math.floor(c)]):$.i18n.t("%s hrs ago","number of hours since something",[Math.floor(c/60)])},cleanMemoId:function(b){return b.replace(/[:=-_@\.\/]/g,"")},dateFormat:function(){var b=/d{1,4}|m{1,4}|yy(?:yy)?|([HhMsTt])\1?|[LloSZ]|"[^"]*"|'[^']*'/g,
a=/\b(?:[PMCEA][SDP]T|(?:Pacific|Mountain|Central|Eastern|Atlantic) (?:Standard|Daylight|Prevailing) Time|(?:GMT|UTC)(?:[-+]\d{4})?)\b/g,c=/[^-+\dA-Z]/g,e=function(a,c){a=String(a);for(c=c||2;a.length<c;)a="0"+a;return a};return function(d,f,g){var j,n,h;d==0&&(d=1);h={"default":"ddd mmm dd yyyy HH:MM:ss",shortDate:"m/d/yy",shortDateWithZero:"mm/dd/yyyy",mediumDate:"mmm d, yyyy",longDate:"mmmm d, yyyy",fullDate:"dddd, mmmm d, yyyy",fullDatePlusTime:"dddd, mmmm d - h:MM tt",fullDateAndTime:"mm/dd/yyyy hh:MM:ss TT",
dateTimeForMemoChangeDate:"m-d-yyyy hh:MM:ss TT",shortTime:"h:MM TT",mediumTime:"h:MM:ss TT",longTime:"h:MM:ss TT Z",isoDate:"yyyy-mm-dd",isoTime:"HH:MM:ss",isoDateTime:"yyyy-mm-dd'T'HH:MM:ss",isoUtcDateTime:"UTC:yyyy-mm-dd'T'HH:MM:ss'Z'"};j=[$.i18n.t("Sun","shorthand for Sunday"),$.i18n.t("Mon","shorthand for Monday"),$.i18n.t("Tue","shorthand for Tuesday"),$.i18n.t("Wed","shorthand for Wednesday"),$.i18n.t("Thu","shorthand for Thursday"),$.i18n.t("Fri","shorthand for Friday"),$.i18n.t("Sat","shorthand for Saturday"),
$.i18n.t("Sunday"),$.i18n.t("Monday"),$.i18n.t("Tuesday"),$.i18n.t("Wednesday"),$.i18n.t("Thursday"),$.i18n.t("Friday"),$.i18n.t("Saturday")];n=[$.i18n.t("Jan","shorthand for January"),$.i18n.t("Feb","shorthand for February"),$.i18n.t("Mar","shorthand for March"),$.i18n.t("Apr","shorthand for April"),$.i18n.t("May","shorthand for May"),$.i18n.t("Jun","shorthand for June"),$.i18n.t("Jul","shorthand for July"),$.i18n.t("Aug","shorthand for August"),$.i18n.t("Sep","shorthand for September"),$.i18n.t("Oct",
"shorthand for October"),$.i18n.t("Nov","shorthand for November"),$.i18n.t("Dec","shorthand for December"),$.i18n.t("January"),$.i18n.t("February"),$.i18n.t("March"),$.i18n.t("April"),$.i18n.t("May"),$.i18n.t("June"),$.i18n.t("July"),$.i18n.t("August"),$.i18n.t("September"),$.i18n.t("October"),$.i18n.t("November"),$.i18n.t("December")];arguments.length==1&&Object.prototype.toString.call(d)=="[object String]"&&!/\d/.test(d)&&(f=d,d=void 0);d=d?new Date(d):new Date;if(isNaN(d))throw SyntaxError("invalid date");
f=String(h[f]||f||h["default"]);f.slice(0,4)=="UTC:"&&(f=f.slice(4),g=true);var i=g?"getUTC":"get";h=d[i+"Date"]();var p=d[i+"Day"](),l=d[i+"Month"](),q=d[i+"FullYear"](),k=d[i+"Hours"](),r=d[i+"Minutes"](),s=d[i+"Seconds"](),i=d[i+"Milliseconds"](),o=g?0:d.getTimezoneOffset(),t={d:h,dd:e(h),ddd:j[p],dddd:j[p+7],m:l+1,mm:e(l+1),mmm:n[l],mmmm:n[l+12],yy:String(q).slice(2),yyyy:q,h:k%12||12,hh:e(k%12||12),H:k,HH:e(k),M:r,MM:e(r),s:s,ss:e(s),l:e(i,3),L:e(i>99?Math.round(i/10):i),t:k<12?"a":"p",tt:k<
12?"am":"pm",T:k<12?"A":"P",TT:k<12?"AM":"PM",Z:g?"UTC":(String(d).match(a)||[""]).pop().replace(c,""),o:(o>0?"-":"+")+e(Math.floor(Math.abs(o)/60)*100+Math.abs(o)%60,4),S:["th","st","nd","rd"][h%10>3?0:(h%100-h%10!=10)*h%10]};return f.replace(b,function(a){return a in t?t[a]:a.slice(1,a.length-1)})}}(),convertURLstringsToAnchors:function(b,a){var c='<a href="$1" target="_blank">$1</a>';a&&(c='<span class="aStyle">$1</span>');return b.replace(/((http|ftp|https):\/\/[\w\-_]+(\.[\w\-_]+)+([\w\-\.,@?^=%&amp;:\/~\+#]*[\w\-\@?^=%&amp;\/~\+#])?)/ig,
c)},linkify:function(b){return b.replace(/(\()((?:ht|f)tps?:\/\/[a-z0-9\-._~!$&'()*+,;=:\/?#[\]@%]+)(\))|(\[)((?:ht|f)tps?:\/\/[a-z0-9\-._~!$&'()*+,;=:\/?#[\]@%]+)(\])|(\{)((?:ht|f)tps?:\/\/[a-z0-9\-._~!$&'()*+,;=:\/?#[\]@%]+)(\})|(<|&(?:lt|#60|#x3c);)((?:ht|f)tps?:\/\/[a-z0-9\-._~!$&'()*+,;=:\/?#[\]@%]+)(>|&(?:gt|#62|#x3e);)|((?:^|[^=\s'"\]])\s*['"]?|[^=\s]\s+)(\b(?:ht|f)tps?:\/\/[a-z0-9\-._~!$'()*+,;=:\/?#[\]@%]+(?:(?!&(?:gt|#0*62|#x0*3e);|&(?:amp|apos|quot|#0*3[49]|#x0*2[27]);[.!&',:?;]?(?:[^a-z0-9\-._~!$&'()*+,;=:\/?#[\]@%]|$))&[a-z0-9\-._~!$'()*+,;=:\/?#[\]@%]*)*[a-z0-9\-_~$()*+=\/#[\]@%])/img,
'$1$4$7$10$13<a href="$2$5$8$11$14">$2$5$8$11$14</a>$3$6$9$12')},linkifyHtml:function(b){b=b.replace(/&amp;apos;/g,"&#39;");section_html_pattern=/([^<]+(?:(?!<a\b)<[^<]*)*|(?:(?!<a\b)<[^<]*)+)|(<a\b[^>]*>[^<]*(?:(?!<\/a\b)<[^<]*)*<\/a\s*>)/ig;return b.replace(section_html_pattern,_linkify_html_callback)},urlHash:{set:function(b){var b=$.toQueryParams(b),a=$.toQueryParams(location.hash),c;for(c in b)a[c]=b[c];return $.toQueryString(a)},remove:function(b){var b=$.toQueryParams(b),a=$.toQueryParams(location.hash),
c={},e;for(e in a)b[e]==void 0&&(c[e]=a[e]);return $.toQueryString(c)},get:function(b){var a;a=m.embeddedParams&&typeof m.embeddedParams.memo_hash!="undefined"&&m.embeddedParams.memo_hash!=""?m.embeddedParams.memo_hash:location.hash;return typeof b=="undefined"?$.toQueryParams(a):$.toQueryParams(a)[b]},go:function(b){location.hash=b.substr(0,1)=="#"?b:"#"+b;return false}},getMessages:function(){$(window).bind("message",function(b){for(name in b.originalEvent.data){if(name.match(/custom_hostname/))m.embeddedParams.custom_hostname=
b.originalEvent.data[name];if(name.match(/custom_pathname/))m.embeddedParams.custom_pathname=b.originalEvent.data[name]}$(window).unbind("message");return true})},fixedModulus:function(b,a){return(b%a+a)%a}};
m.globalTemplates={dialogs:{removeLane:'<div id="" class="memolaneDialog">\t<div class="dialogTopBar">\t\t<div class="dialogTitle">'+$.i18n.t("Remove Lane")+'</div>\t\t<div class="close closeMemolaneDialog cancelAddingBtn">'+$.i18n.t("cancel","close remove lane dialog")+'</div>\t\t<div class="clearFloatNoHeight"></div>\t</div>\t<div class="dialogContent">\t\t<p><strong>'+$.i18n.t("Are you sure you want to remove")+' "${title}" '+$.i18n.t("from Memolane?")+"</strong></p>\t\t<p>"+$.i18n.t("All settings will be lost, and any work you've put into curating this lane will be permanently gone!")+
'</p>\t\t<p><a href="#" class="btn-red float-left removeConfirm close">'+$.i18n.t("Yes, REMOVE the lane")+'</a> <a href="#" class="secondaryAction float-left close">'+$.i18n.t("No, I don't want that")+"</a></p>\t</div></div>",removeLaneContributor:'<div id="" class="memolaneDialog">\t<div class="dialogTopBar">\t\t<div class="dialogTitle">'+$.i18n.t("Stop Contributing?")+'</div>\t\t<div class="close closeMemolaneDialog cancelAddingBtn">'+$.i18n.t("cancel","close remove lane contributor dialog")+'</div>\t\t<div class="clearFloatNoHeight"></div>\t</div>\t<div class="dialogContent">\t\t<p><strong>'+
$.i18n.t("Are you sure you wish to stop contributing to this lane:")+' ${lane_title}</strong></p>\t\t<p><a href="#" class="btn-red float-left removeConfirm close">'+$.i18n.t("Remove me as a contributor from this lane")+'</a> <a href="#" class="secondaryAction float-left close">'+$.i18n.t("No, I don't want that")+"</a></p>\t</div></div>",addFriend:'<div id="" class="memolaneDialog">\t<div class="dialogTopBar">\t\t<div class="dialogTitle">'+$.i18n.t("Friend Request Sent")+'</div>\t\t<div class="close closeMemolaneDialog cancelAddingBtn">'+
$.i18n.t("close","close dialog")+'</div>\t\t<div class="clearFloatNoHeight"></div>\t</div>\t<div class="dialogContent">\t\t<p><strong>'+$.i18n.t("Cross your fingers!")+"</strong></p>\t\t<p>"+$.i18n.t("You just sent a friend request to")+' ${first_name} ${last_name}.</p>\t\t<p><a href="#" class="btn-green float-left close">'+$.i18n.t("OK","ok button for dialog")+"</a></p>\t</div></div>",acceptFriendRequest:'<div id="" class="memolaneDialog">\t<div class="dialogTopBar">\t\t<div class="dialogTitle">Accepted Friend Request</div>\t\t<div class="close closeMemolaneDialog cancelAddingBtn">'+
$.i18n.t("close","close dialog")+'</div>\t\t<div class="clearFloatNoHeight"></div>\t</div>\t<div class="dialogContent">\t\t<p><strong>'+$.i18n.t("We're friends!</strong>")+"</p>\t\t<p>"+$.i18n.t("You just accepted <strong>${full_name}'s</strong> friend request!")+"</p>\t\t<p>"+$.i18n.t('You can now see each other\'s "Friends Only" memos.')+'</p>\t\t<p><a href="#" class="btn-green float-left close">'+$.i18n.t("OK","ok button for dialog")+"</a></p>\t</div></div>",rejectFriendRequest:'<div id="" class="memolaneDialog">\t<div class="dialogTopBar">\t\t<div class="dialogTitle">'+
$.i18n.t("Ignored Friend Request")+'</div>\t\t<div class="close closeMemolaneDialog cancelAddingBtn">'+$.i18n.t("close","close dialog")+'</div>\t\t<div class="clearFloatNoHeight"></div>\t</div>\t<div class="dialogContent">\t\t<p><strong>'+$.i18n.t("It's not you, it's me")+"</strong></p>\t\t<p>"+$.i18n.t("You just ignored <strong>${full_name}'s</strong> friend request.")+"</p>\t\t<p>"+$.i18n.t("At this point, you can only see each other's public memos.")+"</p>\t</div></div>",cancelFriendRequest:'<div id="" class="memolaneDialog">\t<div class="dialogTopBar">\t\t<div class="dialogTitle">'+
$.i18n.t("Cancelled Friend Request")+'</div>\t\t<div class="close closeMemolaneDialog cancelAddingBtn">'+$.i18n.t("close","close dialog")+'</div>\t\t<div class="clearFloatNoHeight"></div>\t</div>\t<div class="dialogContent">\t\t<p><strong>'+$.i18n.t("It's not you, it's me")+"</strong></p>\t\t<p>"+$.i18n.t("You just cancelled your request for <strong>${full_name}'s</strong> friendship.")+"</p>\t\t<p>"+$.i18n.t("At this point, you can only see each other's public memos.")+"</p>\t</div></div>",removeFriend:'<div id="" class="memolaneDialog">\t<div class="dialogTopBar">\t\t<div class="dialogTitle">'+
$.i18n.t("Remove Friend?")+'</div>\t\t<div class="close closeMemolaneDialog cancelAddingBtn">'+$.i18n.t("cancel","close remove friend dialog")+'</div>\t\t<div class="clearFloatNoHeight"></div>\t</div>\t<div class="dialogContent">\t\t<p><strong>'+$.i18n.t("Are you sure you want to cancel your Memolane friendship with")+" ${full_name}</strong>?</p>\t\t<p>"+$.i18n.t("You and")+" ${full_name} "+$.i18n.t("will lose the ability to see each other's \"Friends Only\" memos and contribute to each other's lanes.")+
'</p>\t\t<p><a href="#" class="btn-red float-left removeConfirm close">'+$.i18n.t("Yes, REMOVE the friend")+'</a> <a href="#" class="secondaryAction float-left close">'+$.i18n.t("No, I don't want that")+"</a></p>\t</div></div>",genericListOfUsersDialog:'<div id="list-users" class="memolaneDialog">\t<div class="dialogTopBar">\t\t<div class="dialogTitle">${$item.dialogTitle}</div>\t\t<div class="close closeMemolaneDialog cancelAddingBtn">'+$.i18n.t("close","close dialog")+'</div>\t\t<div class="clearFloatNoHeight"></div>\t</div>\t<div class="dialogContent"><ul>\t{{each liked_by}}\t\t<li class="clearfix">\t\t<a href="/${user.username}" title="'+
$.i18n.t("view user profile")+'">\t\t<img src="/${user.username}/images" height="20" width="20" class="search-result-icon search-user-avatar" alt="'+$.i18n.t("top bar avatar","this labels the lane avatar")+'"/>\t\t<span class="list-user-fullname-username">\t\t${user.full_name}\t\t<span class="list-users-username">(${user.username})</span>\t\t<span class="list-users-date">'+$.i18n.t("Liked ")+" ${m.utilities.dateFormatRelative(timestamp)}</span>\t\t</span> </a></li>\t{{/each}}</ul>\t</div></div>"}};
m.deviceIsIpad=navigator.userAgent.match(/iPad/i)!=null;m.deviceIsIphone=navigator.userAgent.match(/iPhone/i)!=null;m.deviceIsAndroid=navigator.userAgent.toLowerCase().indexOf("android")>-1;m.isIE9=$.browser.version==="9.0"?true:false;m.isIE8=$.browser.version==="8.0"?true:false;m.clickOrTouchStart=Modernizr.touch?"touchstart":"click";m.clickOrTouchEnd=Modernizr.touch?"touchend":"click";m.mouseEnterOrTouchStart=Modernizr.touch?"touchstart":"mouseenter";
m.mouseLeaveOrTouchEnd=Modernizr.touch?"touchend":"mouseleave";m.mouseDownOrTouchStart=Modernizr.touch?"touchstart":"mousedown";m.mouseMoveOrTouchMove=Modernizr.touch?"touchmove":"mousemove";m.mouseUpOrTouchEnd=Modernizr.touch?"touchend":"mouseup";m.mouseOutOrTouchEnd=Modernizr.touch?"touchend":"mouseout";m.mouseOverOrTouchStart=Modernizr.touch?"touchstart":"mouseover";
m.topBar=function(b,a){return{initialize:function(){a(b).bind("resize",function(){m.topBar.runLayout()});this.runLayout()},runLayout:function(){var c=a("body"),b=a("#header"),d=a("#tb-search input");c.width()<1E3&&(b.removeClass("more1024").addClass("less1024"),d.attr("value",a.i18n.t("Search","term used to label search box")));c.width()>=1E3&&(b.removeClass("less1024").addClass("more1024"),m.currentLane?d.attr("value",a.i18n.t("Search memos, lanes & users")):d.attr("value",a.i18n.t("Search lanes & users")))}}}(this,
jQuery,this.undefined);m.topBar.initialize();
m.services=function(b,a){return{$body:a("body"),$makeLaneBtn:null,importableServices:{flickr:{disclaimerText:a.i18n.t('Select "Import Privacy" if you want Memolane to automatically import privacy settings from Flickr. Otherwise, the other privacy setting that you select on Memolane for Flickr (public, private, or friends only) will be applied to all the content from Flickr uniformly.'),mappings:{mlPublic:[a.i18n.t("Public","this is the privacy setting label that maps to the Memolane privacy of public - it should match whatever it is called on Flickr")],mlFriends:[a.i18n.t("Friends",
"this is the privacy setting label that maps to the Memolane privacy of friends only - it should match whatever it is called on Flickr"),a.i18n.t("Friends &amp; Family","this is the privacy setting label that maps to the Memolane privacy of friends only - it should match whatever it is called on Flickr")],mlPrivate:[a.i18n.t("Family","this is the privacy setting label that maps to the Memolane privacy of private - it should match whatever it is called on Flickr"),a.i18n.t("Private","this is the privacy setting label that maps to the Memolane privacy of private - it should match whatever it is called on Flickr")]}},
foursquare:{disclaimerText:a.i18n.t('Select "Import Privacy" if you want Memolane to automatically import privacy settings from Foursquare. Otherwise, the other privacy setting that you select on Memolane for Foursquare (public, private, or friends only) will be applied to all the content from Foursquare uniformly.'),mappings:{mlPublic:[a.i18n.t("Public","this is the privacy setting label that maps to the Memolane privacy of public - it should match whatever it is called on Foursquare")],mlFriends:[],
mlPrivate:[a.i18n.t("Off the Grid","this is the privacy setting label that maps to the Memolane privacy of private - it should match whatever it is called on Foursquare")]}},picasa:{disclaimerText:a.i18n.t('Select "Import Privacy" if you want Memolane to automatically import privacy settings from Picasa. Otherwise, the other privacy setting that you select on Memolane for Picasa (public, private, or friends only) will be applied to all the content from Picasa uniformly.'),mappings:{mlPublic:[a.i18n.t("Public",
"this is the privacy setting label that maps to the Memolane privacy of public - it should match whatever it is called on Picasa")],mlFriends:[],mlPrivate:[a.i18n.t("Private","this is the privacy setting label that maps to the Memolane privacy of private - it should match whatever it is called on Picasa"),a.i18n.t("Limited","this is the privacy setting label that maps to the Memolane privacy of private - it should match whatever it is called on Picasa"),a.i18n.t("Visible with Link","this is the privacy setting label that maps to the Memolane privacy of private - it should match whatever it is called on Picasa")]}},
soundcloud:{disclaimerText:a.i18n.t('Select "Import Privacy" if you want Memolane to automatically import privacy settings from SoundCloud. Otherwise, the other privacy setting that you select on Memolane for SoundCloud (public, private, or friends only) will be applied to all the content from SoundCloud uniformly.'),mappings:{mlPublic:[a.i18n.t("Public","this is the privacy setting label that maps to the Memolane privacy of public - it should match whatever it is called on SoundCloud")],mlFriends:[],
mlPrivate:[a.i18n.t("Private","this is the privacy setting label that maps to the Memolane privacy of private - it should match whatever it is called on SoundCloud")]}},twitter:{disclaimerText:a.i18n.t('Select "Import Privacy" if you want Memolane to automatically import privacy settings from Twitter. Otherwise, the other privacy setting that you select on Memolane for Twitter (public, private, or friends only) will be applied to all the content from Twitter uniformly.'),mappings:{mlPublic:[a.i18n.t("Public",
"this is the privacy setting label that maps to the Memolane privacy of public - it should match whatever it is called on Twitter")],mlFriends:[],mlPrivate:[a.i18n.t("Protected","this is the privacy setting label that maps to the Memolane privacy of private - it should match whatever it is called on Twitter")]}},wordpress:{disclaimerText:a.i18n.t('Select "Import Privacy" if you want Memolane to automatically import privacy settings from WordPress.com. Otherwise, the privacy setting that you select on Memolane for WordPress.com (public, private, or friends only) will be applied to all the content from WordPress.com uniformly.'),
mappings:{mlPublic:[a.i18n.t("Public","this is the privacy setting label that maps to the Memolane privacy of public - it should match whatever it is called on WordPress.com")],mlFriends:[],mlPrivate:[a.i18n.t("Private","this is the privacy setting label that maps to the Memolane privacy of private - it should match whatever it is called on WordPress.com"),a.i18n.t("Password Protected","this is the privacy setting label that maps to the Memolane privacy of private - it should match whatever it is called on WordPress.com")]}}},
privacyLabels:{"private":a.i18n.t("Private","this is the name of the privacy setting that allows a user to set all memos for a given service to private"),"public":a.i18n.t("Public","this is the name of the privacy setting that allows a user to set all memos for a given service to public"),friends:a.i18n.t("Friends Only","this is the name of the privacy setting that allows a user to set all memos for a given service to only friends"),inherit:a.i18n.t("Import Privacy","this is the name of the privacy setting that allows a user to set all memos for a given service to map to the privacy of the originating service")},
added:{},deleting:[],initialize:function(){var c=this;this.checkAccounts();this.pollAccounts();var b=this.$body.find(".makeLane");if(b.length)this.$makeLaneBtn=b;this.$body.find(".services-available li").bind(m.clickOrTouchEnd,function(){a(this).addClass("adding")});this.$body.find(".services-available li .feed").bind(m.clickOrTouchEnd,a.proxy(this.addRSSDialog,this));this.$body.find(".services-added ul:first").delegate(".advancedBtn",m.clickOrTouchEnd,function(){c.toggleAdvanced(a(this))});a.validity.setup({outputMode:"modal"})},
pollAccounts:function(){a.when(m.utilities.wait(1500),m.services.checkAccounts()).done(function(){m.services.pollAccounts()})},checkAccounts:function(){var c=this;return a.ajax({type:"get",url:"/accounts",success:function(b){var d={},f=[];for(x in b.accounts){var g=b.accounts[x],j=g.id;f.push(j);if(!c.added[j]||c.added[j].account_modified!=g.account_modified)c.added[j]=g,g.error?"access_revoked remote_service_error mid_delete rss_error".indexOf(g.error.type)==-1?c.handleSpecialAccountErrors(g):(c.deleting.push(g.id),
d[j]=c.createServiceHTML(g)):d[j]=c.createServiceHTML(g)}c.updateDOMwithAddedServices(d);for(y in c.deleting)if(_.indexOf(f,c.deleting[y])==-1)a("#"+c.deleting[y]).fadeOut(function(){a(this).remove()}),c.deleting=_.without(c.deleting,c.deleting[y])}})},createServiceHTML:function(c){var b=a.tmpl(this.templates.addedService,c);b.find(".getNewContent").bind(m.clickOrTouchEnd,{account:c},function(a){m.services.fetchNewContent(a.data.account);return false});b.find(".setPrivacy").bind(m.clickOrTouchEnd,
{account:c},function(a){m.services.setPrivacy(a.data.account);return false});b.find(".refreshService").bind(m.clickOrTouchEnd,{account:c},function(a){m.services.refetchAllContent(a.data.account);return false});b.find(".removeService").bind(m.clickOrTouchEnd,{account:c},function(a){m.services.removeServiceDialog(a.data.account);return false});return b},updateDOMwithAddedServices:function(c){if(_.size(c)){this.$body.find(".makeLane");var b=this.$body.find(".services-available"),d=this.$body.find(".services-added ul:first");
if(this.$makeLaneBtn)this.$makeLaneBtn.css("visibility","visible").show(),this.$makeLaneBtn=null;for(y in c){this.added[y]&&b.find("a[class="+this.added[y].service+"]").closest("li").removeClass("adding");var f=d.find("#"+y);f.length?f.replaceWith(c[y]):d.append(c[y]);$li=a(c[y]).find(".serviceAdded.serviceError");$li.length&&$li.find(".advancedBtn").click()}}},handleSpecialAccountErrors:function(c){c.error.type=="no_privacy_set"?this.setPrivacy(c):c.error.type=="no_page_selected"&&($dialog=a.tmpl(m.services.templates.selectPageDialog,
c),$dialog.find(".removeService").bind(m.clickOrTouchEnd,{account:c},function(a){m.services.removeService(a.data.account)}),$dialog.find("input:radio").one(m.clickOrTouchEnd,function(){a(this).closest(".dialogContent").find(".selectPageBtn").each(function(){a(this).css("visibility")!="visible"&&a(this).css("visibility","visible").hide().fadeIn()})}),$dialog.find(".selectPageBtn").bind(m.clickOrTouchEnd,function(){var b=a(this).closest(".dialogContent").find("input:radio:checked").val();m.services.setPage(c.id,
b)}),$dialog.lightbox_me({centered:true,destroyOnClose:true,closeClick:false,closeEsc:false}))},addRSSDialog:function(c){var b=a.tmpl(this.templates.addRSSDialog);b.find(".addFeedBtn").bind(m.clickOrTouchEnd,function(c){a.validity.start();a("#rssFeedURL").require().match("url");a.validity.end().valid&&(a.ajax({url:"/services/feed/finalize",data:{url:a("#rssFeedURL").val()}}),a("#addRSSDialog").trigger("close"));c.preventDefault()});b.find(".close").bind(m.clickOrTouchEnd,function(c){a(".formError").remove();
a(c.target).hasClass("removeService")&&a("a.feed").closest("li").removeClass("adding")});b.lightbox_me({centered:true,closeClick:false,closeEsc:false});c.preventDefault()},setPrivacy:function(c){var b=a.tmpl(m.services.templates.setPrivacyDialog,c);b.find(".privacyTabs li").bind(m.clickOrTouchEnd,{account:c},function(b){var c=b.target,d=a(b.target).attr("id"),e=b.data.account,h="/account_privacy/";e.error&&(h="/account_initial_privacy/");a.ajax({type:"post",url:h+encodeURIComponent(e.id),data:{privacy:d},
success:function(){a(c).closest(".memolaneDialog").trigger("close")}});a(this).addClass("smallButtonActive");b.preventDefault()});b.find("li a").bind("mouseenter mouseleave "+m.clickOrTouchEnd,function(b){var c=a(this),d=c.attr("id");c.hasClass("active")||(b.type=="mouseenter"?(m.services.$body.find(".privacyTabDescription div").hide(),m.services.$body.find("#"+d+"TabDescription").fadeIn("fast")):b.type=="mouseleave"&&c.siblings().hasClass("active")?(m.services.$body.find(".privacyTabDescription div").hide(),
b=c.siblings(".active").attr("id"),m.services.$body.find("#"+b+"TabDescription").fadeIn("fast")):m.services.$body.find(".privacyTabDescription div").hide())});var d=true;c.error&&(d=false,b.find(".removeService").bind(m.clickOrTouchEnd,{account:c},function(a){m.services.removeService(a.data.account)}));b.lightbox_me({closeClick:d,closeEsc:d})},setPage:function(b,e){a.ajax({type:"post",url:"/utils/set_page",data:{account_id:b,page_id:e}})},fetchNewContent:function(b){a.ajax({type:"post",url:"/update/"+
encodeURIComponent(b.id)});a.tmpl(this.templates.fetchNewDialog,b).lightbox_me({centered:true})},refetchAllContent:function(b){var e=a.tmpl(this.templates.refetchAllDialog,b);e.find(".refetchConfirm").bind(m.clickOrTouchEnd,{account:b},function(b){a(b.target).attr("id");a.ajax({type:"post",url:"/refresh/"+encodeURIComponent(b.data.account.id)});b.preventDefault()});e.lightbox_me({centered:true})},removeServiceDialog:function(b){var e=a.tmpl(this.templates.removeServiceDialog,b);e.find(".removeConfirm").bind(m.clickOrTouchEnd,
{account:b},function(a){m.services.removeService(a.data.account);a.preventDefault()});e.lightbox_me({centered:true})},removeService:function(b){var e=b.id;this.$body.find(".services-available a[class*="+b.service+"]").closest("li").removeClass("adding");a.ajax({type:"delete",url:"/account/"+encodeURIComponent(e)});this.$body.find(".memolaneDialog").trigger("close").end().find("#"+e).addClass("deleting").find(".serviceSettings").hide();this.deleting.push(e)},toggleAdvanced:function(b){$advancedBtn=
a(b);$settings=$advancedBtn.parents(".serviceAdded").siblings(".serviceSettings");$settings.is(":visible")?($settings.slideUp("fast"),$advancedBtn.removeClass("open")):($settings.slideDown(),$advancedBtn.addClass("open"));return false},templates:{addedService:'<li id="${id}"{{if error && error.type == "mid_delete"}} class="deleting"{{/if}}>\t<div class="serviceAdded ${service}{{if error}} serviceError{{/if}}">\t\t<div>\t\t\t<img height="30" width="30" src="{{if image}}${image}{{else}}/img/defaults/avatar-140.gif {{/if}}" alt="${service_name}" />\t\t\t<div class="serviceInfo float-left">\t\t\t\t<h3>{{if username}}${username}{{else}}${user_id}{{/if}}</h3>\t\t\t\t<div class="currentPrivacy icon${default_privacy}">${m.services.privacyLabels[default_privacy]}</div>\t\t\t</div>\t\t\t<div class="serviceControls float-right">\t\t\t\t<div class="serviceHealth"><span class="deletingText">'+
a.i18n.t("Deleting","this is a temporary status message that informs the user that the given service is in the process of being deleted")+'</span></div>\t\t\t\t<div class="getNewContentBtn getNewContent smallTooltip float-right sml-btn-grey">'+a.i18n.t("Fetch New Content","this button allows the user to pull down any new content that exists in the given service")+'</div>\t\t\t\t<div class="advancedBtn">'+a.i18n.t("Edit","this is a button that allows the user to edit certain aspects of the given service")+
'</div>\t\t\t</div>\t\t</div>\t</div>\t<div class="serviceSettings">\t\t<div class="serviceSettingsContent">\t\t\t{{if error}}\t\t\t\t<div class="serviceErrorText">\t\t\t\t\t{{if error.type == "access_revoked"}}\t\t\t\t\t\t'+a.i18n.t('We are no longer authorized to access this ${service_name} account.  You can <a href="/services/${service}" target="_blank">reauthorize it</a> or remove it (by clicking the "Remove Service" button below).')+'\t\t\t\t\t{{else error.type == "remote_service_error"}}\t\t\t\t\t\t'+
a.i18n.t('Our recent attempts to fetch new content from your ${service_name} account failed. You can wait, or try again now by clicking the "Fetch New Content" button.')+'\t\t\t\t\t{{else error.type == "mid_delete"}}\t\t\t\t\t\t'+a.i18n.t("This ${service_name} account (and its memos) are in the process of being deleted.")+'\t\t\t\t\t{{else error.type == "rss_error"}}\t\t\t\t\t\t'+a.i18n.t('This RSS feed is not currently available. You may want to verify that it still exists at <a href="${error.description}" target="_blank">${error.description}</a>.')+
'\t\t\t\t\t{{/if}}\t\t\t\t</div>\t\t\t{{/if}}\t\t\t<ul>\t\t\t\t<li>\t\t\t\t\t<a href="#" class="btn-green setPrivacy">'+a.i18n.t("Set Privacy","this is the button text for setting privacy on the given service")+'</a>\t\t\t\t</li>\t\t\t\t<li>\t\t\t\t\t<a href="#" class="btn-green refreshService">'+a.i18n.t("Re-fetch all content","this is the button text for re-fetching the given service (which is basically to refresh all stored memos by replacing them with new copies from the originating service)")+
'</a>\t\t\t\t</li>\t\t\t\t<li>\t\t\t\t\t<a href="#" class="btn-green removeService">'+a.i18n.t("Remove Service","this is the button text for deleting the given service")+"</a>\t\t\t\t</li>\t\t\t</ul>\t\t</div>\t</div></li>",addRSSDialog:'<div id="addRSSDialog" class="memolaneDialog">\t<div class="dialogTopBar">\t\t<div class="dialogTitle">'+a.i18n.t("Add an RSS or Atom feed","this is the title of the dialog for adding an RSS feed to your Memolane account")+'</div>\t\t<div class="close closeMemolaneDialog removeService">'+
a.i18n.t("cancel","the cancel button to close the dialog window")+'</div>\t\t<div class="clearFloatNoHeight"></div>\t</div>\t<div class="dialogContent">\t\t<p>'+a.i18n.t("Right click an RSS or Atom subscribe link on your favorite site, copy the link address, and then paste it in the text field below.")+'</p>\t\t<input type="text" id="rssFeedURL" style="width:410px" />\t\t<p><a href="#" class="btn-green float-left addFeedBtn">'+a.i18n.t("Add Feeds","this is the link text for adding an RSS feed to your Memolane account")+
"</a></p>\t</div></div>",selectPageDialog:'<div id="selectPageDialog" class="memolaneDialog">\t<div class="dialogTopBar">\t\t<div class="dialogTitle">'+a.i18n.t("Select page","this is the title of the dialog, which prompts the user to pick one of multiple pages associated with the given account")+'</div>\t\t<div class="close closeMemolaneDialog removeService">'+a.i18n.t("cancel adding service","the link text to close the dialog window and cancel the process of adding the service")+'</div>\t\t<div class="clearFloatNoHeight"></div>\t</div>\t<div class="dialogContent">\t\t<h2 class="header typeJ">'+
a.i18n.t("Which page do you want?")+"</h2>\t\t<p>"+a.i18n.t("In order to add ${service_name}, you need to specify the page you would like to add.  Please select from the following:</p>")+'\t\t<p><table>\t\t\t{{each error.pages}}<tr><td><input type="radio" class="selectedPage" name="page" value="${page_id}" /></td><td><img src="${pic}" /></td><td>${name}</td></tr>{{/each}}\t\t</table></p>\t\t<p><a href="#" class="btn-green float-left close selectPageBtn">'+a.i18n.t("Submit")+"</a></p>\t</div></div>",
setPrivacyDialog:'<div id="privacyDialog" class="memolaneDialog">\t<div class="dialogTopBar">\t\t<div class="dialogTitle">'+a.i18n.t("Set Privacy")+'</div>\t\t{{if error}}\t\t\t<div class="close closeMemolaneDialog removeService">'+a.i18n.t("cancel adding service","the link text to close the dialog window and cancel the process of adding the service")+'</div>\t\t{{else}}\t\t\t<div class="close closeMemolaneDialog">'+a.i18n.t("cancel","the cancel button to close the dialog window")+'</div>\t\t{{/if}}\t\t<div class="clearFloatNoHeight"></div>\t</div>\t<div class="dialogContent">\t\t<h2 class="${service}">${username} <br /><span>${service_name}</span></h2>\t\t<a href="#" class="close" id="setPrivacyDone" style="display:none;">'+
a.i18n.t("Close","the text link to close the dialog window")+"</a>\t\t<p>"+a.i18n.t("The privacy setting that you select on Memolane for ${service_name} will be applied to all your content from ${service_name} uniformly.")+"</p>\t\t<p>"+a.i18n.t("Please choose a setting to continue:")+'</p>\t\t<ul class="privacyTabs smallButtonBar">\t\t\t<li><a href="#" id="public">'+a.i18n.t("Public","this is the name of the privacy setting that allows a user to set all memos for a given service to public")+'</a></li>\t\t\t<li><a href="#" id="friends">'+
a.i18n.t("Friends Only","this is the name of the privacy setting that allows a user to set all memos for a given service to only friends")+'</a></li>\t\t\t<li><a href="#" id="private">'+a.i18n.t("Private","this is the name of the privacy setting that allows a user to set all memos for a given service to private")+'</a></li>\t\t\t{{if m.services.importableServices[service]}}<li><a href="#" id="inherit">'+a.i18n.t("Import Privacy","this is the name of the privacy setting that allows a user to set all memos for a given service to map to the privacy of the originating service")+
'</a></li>{{/if}}\t\t</ul>\t\t<div class="privacyTabDescription">\t\t\t<div id="publicTabDescription"><h3>'+a.i18n.t("Public","this is the name of the privacy setting that allows a user to set all memos for a given service to public")+"</h3><p>"+a.i18n.t("All your ${service_name} memos will be visible to everyone who views your lanes, and it can be pulled into lanes created by your Memolane friends. We will notify you by email whenever any of your content gets used on a lane created by one of your Memolane friends so you can remove it if you choose.")+
'</p></div>\t\t\t<div id="friendsTabDescription"><h3>'+a.i18n.t("Friends Only","this is the name of the privacy setting that allows a user to set all memos for a given service to only friends")+"</h3><p>"+a.i18n.t("Memos from ${service_name} will only be visible to you and your Memolane friends on all lanes where they appear. We will notify you by email whenever any of your memos are contributed to a lane created by one of your Memolane friends so you can remove it if you choose.")+'</p></div>\t\t\t<div id="privateTabDescription"><h3>'+
a.i18n.t("Private","this is the name of the privacy setting that allows a user to set all memos for a given service to private")+"</h3><p>"+a.i18n.t("Memos from ${service_name} will only be visible to you on all lanes where they appear.")+'</p></div>\t\t\t{{if m.services.importableServices[service]}}<div id="inheritTabDescription"><h3>'+a.i18n.t("Import Privacy Settings","this is the name of the privacy setting that allows a user to set all memos for a given service to map to the privacy of the originating service")+
"</h3><p>{{tmpl m.services.templates.importPrivacyMappingsTable}}</p></div>{{/if}}\t\t</div>\t</div></div>",fetchNewDialog:'<div id="" class="memolaneDialog">\t<div class="dialogTopBar">\t\t<div class="dialogTitle">'+a.i18n.t("Fetch New Content")+'</div>\t\t<div class="close closeMemolaneDialog cancelAddingBtn">'+a.i18n.t("close","the text link to close the dialog window")+'</div>\t\t<div class="clearFloatNoHeight"></div>\t</div>\t<div class="dialogContent">\t\t<h2 class="header typeJ">'+a.i18n.t("We're on it!")+
"</h2>\t\t<p>"+a.i18n.t("The process of refreshing Memolane with the your most recent ${service_name} memos has begun.")+"</p>\t\t<p><strong>"+a.i18n.t("It's not instant.")+"</strong></p>\t\t<p>"+a.i18n.t("It may take us a few minutes to get the update and apply it to your lane(s), but good things come to those who wait.")+'</p>\t\t<p><a href="#" class="btn-green float-left close">'+a.i18n.t("OK")+"</a></p>\t</div></div>",refetchAllDialog:'<div id="" class="memolaneDialog">\t<div class="dialogTopBar">\t\t<div class="dialogTitle">'+
a.i18n.t("Re-fetch All Content")+'</div>\t\t<div class="close closeMemolaneDialog cancelAddingBtn">'+a.i18n.t("cancel","the cancel button to close the dialog window")+'</div>\t\t<div class="clearFloatNoHeight"></div>\t</div>\t<div class="dialogContent">\t\t<p><strong>'+a.i18n.t("Are you sure that you wish to re-fetch all of your ${service_name} memos?")+"</strong></p>\t\t<p>"+a.i18n.t("Re-fetching will gather any changes you have made to previously published content on ${service_name}, but it will also overwrite any custom privacy settings you have made for individual memos on Memolane.")+
'</p>\t\t<p><a href="#" class="btn-green float-left refetchConfirm close">'+a.i18n.t("Yes, renew all memos")+'</a> <a href="#" class="secondaryAction float-left close">'+a.i18n.t("No, I don't want that")+"</a></p>\t</div></div>",removeServiceDialog:'<div id="" class="memolaneDialog">\t<div class="dialogTopBar">\t\t<div class="dialogTitle">'+a.i18n.t("Remove Service?")+'</div>\t\t<div class="close closeMemolaneDialog cancelAddingBtn">'+a.i18n.t("cancel","the cancel button to close the dialog window")+
'</div>\t\t<div class="clearFloatNoHeight"></div>\t</div>\t<div class="dialogContent">\t\t<p><strong>'+a.i18n.t("Are you sure you wish to remove your ${service_name} account from Memolane?")+"</strong></p>\t\t<p>"+a.i18n.t("All of your ${service_name} memos will be permanently removed from any lanes where they appear. This action cannot be undone.")+'</p>\t\t<p><a href="#" class="btn-red float-left removeConfirm close">'+a.i18n.t("Yes, REMOVE the service")+'</a> <a href="#" class="secondaryAction float-left close">'+
a.i18n.t("No, I don't want that")+"</a></p>\t</div></div>",importPrivacyMappingsTable:'<table cellpadding="0" cellspacing="0"><tr><th>'+a.i18n.t("${service_name} Privacy","this is a title that labels the following table as the mappings of Memolane privacy to the given service privacy, where service_name is a service, like Facebook or Twitter")+"</th><th>&nbsp;</th><th>"+a.i18n.t("Memolane Privacy")+'</th></tr>\t{{if m.services.importableServices[service].mappings.mlPublic.length}}\t\t<tr><td>{{html m.services.importableServices[service].mappings.mlPublic.join("<br />")}}</td><td><span>&rarr;</span></td><td>'+
a.i18n.t("Public","this is the name of the privacy setting that allows a user to set all memos for a given service to public")+'</td></tr>\t{{/if}}\t{{if m.services.importableServices[service].mappings.mlFriends.length}}\t\t<tr><td>{{html m.services.importableServices[service].mappings.mlFriends.join("<br />")}}</td><td><span>&rarr;</span></td><td>'+a.i18n.t("Friends Only","this is the name of the privacy setting that allows a user to set all memos for a given service to only friends")+'</td></tr>\t{{/if}}\t{{if m.services.importableServices[service].mappings.mlPrivate.length}}\t\t<tr><td>{{html m.services.importableServices[service].mappings.mlPrivate.join("<br />")}}</td><td><span>&rarr;</span></td><td>'+
a.i18n.t("Private","this is the name of the privacy setting that allows a user to set all memos for a given service to private")+"</td></tr>\t{{/if}}</table>"}}}(this,jQuery,this.undefined);m.services.initialize();$.fn.lightbox_me.defaults.destroyOnClose=true;$.fn.lightbox_me.defaults.centered=true;m.utilities.browser.init();var currentBrowser=m.utilities.browser;
(currentBrowser.browser==="Firefox"&&parseInt($.browser.version,10)<6||currentBrowser.browser==="Opera"&&parseInt($.browser.version,10)<11||currentBrowser.browser==="Explorer"&&parseInt($.browser.version,10)<9)&&$('<div class="notifications badnews-notice"><div class="notice-text">'+$.i18n.t("You appear to be using an older browser. Did it come with a free toaster? Memolane and the internet in general looks better with Explorer 9, Opera 11+, Chrome 12+, Firefox 6+, and Safari 5+, so please consider upgrading and come back to visit. P.S. The irony that we don't support viewing on mobile phones is not lost on us.")+
' <a href="#" class="close-notice">X</a></div></div>').notify({expires:false});
(m.deviceIsIphone||Modernizr.touch&&!m.deviceIsIpad&&!m.deviceIsAndroid||m.deviceIsAndroid&&!navigator.userAgent.toLowerCase().match(/android 3/i))&&$('<div class="notifications badnews-notice"><div class="notice-text">'+$.i18n.t("We're working on shrinking Memolane for mobile phones, in the meantime please check out Memolane on a larger screen. We suggest an iPad, Android tablet, or the desktop or laptop of your choice.")+' <a href="#" class="close-notice">X</a></div></div>').notify({expires:false});
$.ajaxSetup({data:{_csrf:m.csrf}});$.ajaxPrefilter(function(b){b.type.toLowerCase()==="delete"&&(b.data+="&_method=DELETE")});
